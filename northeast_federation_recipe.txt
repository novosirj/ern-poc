The cast:

test

ufp.hpc.rutgers.edu - slurm database, xrootd redirector, xrootd data server, ldap server, ganglia web, perfsonar web

mace - 6-node physical cluster at Rutgers
mace - login node, scheduler, local nfs
mace[1-5] - compute nodes

~/fedconfig - site-specific config files - generate or get from Rutgers and modify - for example the chrony.conf includes Rutgers name servers.

OS: Centos 7.4
OpenHPC recipe: 1.3.4
Scheduler: slurm 17.11
Filesystem: xrootdfs with local nfs export
Authz, authn: ldap, replace with shibboleth
Other: ganglia, perfsonar
Eval: openafs, stashcache, kubernetes, singularity

Issues:
xrootd won’t mount until ldap is ready

# bare metal install
# install centos 7.4 minimal
# set up ssh keys from management
yum -y update
# this one fails - did update do it already?  just skip it and install the other groups.
#yum -y groupinstall “Infrastructure Server”
yum -y groupinstall "Hardware Monitoring Utilities" "Performance Tools" "Development Tools" "Network File System Client" "Console Internet Tools" "Networking Tools" "System Administration Tools" "System Management" “Compatibility Libraries” “Platform Development”
# customize the “local” part of hosts.allow and hosts to add management, monitoring, etc.
# y to overwrite prompt
# skip these three for the compute nodes - do it once keys are set up from mace
cp ~/fedconfig/hosts /etc
cp ~/fedconfig/hosts.allow /etc
cp ~/fedconfig/hosts.deny /etc
yum -y install https://na01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fbuild.openhpc.community%2FOpenHPC%3A%2F1.3%2FCentOS_7%2Fx86_64%2Fohpc-release-1.3-1.el7.x86_64.rpm&data=02%7C01%7Cericmars%40oarc.rutgers.edu%7C001a3cd57bd44909725108d5c06c1f70%7Cb92d2b234d35447093ff69aca6632ffe%7C1%7C1%7C636626492979197825&sdata=b0X9gyliwu3WEMS2LhSb2mqFUTFetnAJ7pfhH2pL6g8%3D&reserved=0
yum -y update
yum -y install ohpc-base
sed -i s/SELINUX=enforcing/SELINUX=permissive/ /etc/selinux/config
setenforce 0
cp ~/fedconfig/chrony.conf /etc
systemctl restart chronyd
yum -y install nmap iptraf-ng iperf3 hdparm msr-tools mlocate trafshow yum-utils
# customize


# mace
# follow bare metal install for mace and mace1-5


# firewall
firewall-cmd --list-all-zones
firewall-cmd --zone=public --remove-service=dhcpv6-client
firewall-cmd --zone=public --remove-service=ssh
firewall-cmd --info-zone=public
# add internal interface to trusted zone
# ZONE=trusted
vi /etc/sysconfig/network-scripts/ifcfg-enp6s4f0
# these are Rutgers-local networks - replace with your campus management network
firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="172.16.94.0/24" accept'
firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="172.16.74.64/26" accept'
firewall-cmd --zone=public --add-masquerade
firewall-cmd --runtime-to-permanent

# node ssh keys
ssh-keygen
ssh-copy-id mace1
ssh-copy-id mace2
ssh-copy-id mace3
ssh-copy-id mace4
ssh-copy-id mace5
pdsh -w mace[1-5] "uptime"
echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
sysctl -p /etc/sysctl.conf


# ldap
yum install sssd openldap-clients
authconfig --updateall --enableldap --enableldapauth --ldapserver=ldap://ufp.hpc.rutgers.edu:389 --ldapbasedn=dc=ufp,dc=hpc,dc=rutgers,dc=edu --enableldaptls --enableldapstarttls
cp ~/fedconfig/cacert.pem /etc/openldap/cacerts
cacertdir_rehash /etc/openldap/cacerts/
systemctl restart sssd
id babbott


# create home dirs
yum install oddjob-mkhomedir
systemctl enable oddjobd
systemctl start oddjobd
authconfig --enablemkhomedir --update

# slurm, munge
# check that user are already in ldap
id slurm
id munge
yum install ohpc-slurm-server ohpc-slurm-client
cp ~/fedconfig/munge.key-ufp /etc/munge/munge.key
systemctl restart munge
# Modify /etc/slurm/slurm.conf with the below
#ClusterName=mace
#ControlMachine=mace.local
#AccountingStorageType=accounting_storage/slurmdbd
#AccountingStorageHost=ufp.hpc.rutgers.edu
#NodeName=mace[1-5] Sockets=2 CoresPerSocket=4 ThreadsPerCore=1 State=UNKNOWN
#PartitionName=DEFAULT DefaultTime=1:00:00 MaxTime=3-0 State=UP
#PartitionName=main Nodes=mace[1-5] Default=YES AllowGroups=babbott
#PartitionName=ern Nodes=mace[1-5]
#FederationParameters=fed_display
vi /etc/slurm/slurm.conf
systemctl enable slurmctld
systemctl restart slurmctld
# notify Bill of the cluster name and scheduler ip address,
# wait for confirmation that ufp is modified
systemctl restart slurmctld
# send ssh keys
# and usernames to set up in ldap

# nfs - mace exports /home and /xrootd to compute nodes
#/home   192.168.0.0/255.255.0.0(rw,fsid=0)
vi /etc/exports
exportfs -r
exportfs
systemctl enable nfs-server
systemctl start nfs-server



# xrootd
# check that xrootd user is already in ldap
id xrootd
yum -y install xrootd-client xrootd-client-libs xrootd-fuse
mkdir /var/log/xrootd
chown -R xrootd:xrootd /var/log/xrootd/
cp ~/fedconfig/xrootd.key /etc/xrootd
chown -R xrootd:xrootd /etc/xrootd
#xrootdfs /xrootd fuse rdr=xroot://ufp.hpc.rutgers.edu:1094//xdata/,uid=xrootd,sss=/etc/xrootd/xrootd.key,noauto 0 0
vi /etc/fstab
mkdir /xrootd
mount /xrootd
ls -al /xrootd
su - babbott
# only /xrootd/users/babbott should be writeable for babbott
cd /xrootd/users/babbott
touch test
# add to nfs
#/xrootd   192.168.0.0/255.255.0.0(rw,fsid=1)
vi /etc/exports
exportfs -r
exportfs

# add user ssh keys
su - babbott
ssh-keygen
cat .ssh/id_rsa.pub >> .ssh/authorized_keys
chmod 400 .ssh/authorized_keys
ssh mace “uptime”
exit

# perfsonar
yum -y install https://na01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fsoftware.internet2.edu%2Frpms%2Fel7%2Fx86_64%2Fmain%2FRPMS%2FperfSONAR-repo-0.8-1.noarch.rpm&data=02%7C01%7Cericmars%40oarc.rutgers.edu%7C001a3cd57bd44909725108d5c06c1f70%7Cb92d2b234d35447093ff69aca6632ffe%7C1%7C1%7C636626492979197825&sdata=d8QRPSMe52fiwlGRSD62CPlBAA8vdgdgOAfxaSWd7UU%3D&reserved=0
yum clean all
yum install perfsonar-testpoint
yum install perfsonar-toolkit-servicewatcher
yum install perfsonar-toolkit-sysctl
yum install perfsonar-toolkit-systemenv-testpoint
# auto updates
systemctl enable yum-cron
systemctl start yum-cron
systemctl start pscheduler-scheduler
systemctl start pscheduler-runner
systemctl start pscheduler-archiver
systemctl start pscheduler-ticker
systemctl start owamp-server
# not these
#systemctl start perfsonar-lsregistrationdaemon
#systemctl start bwctl-server
# switch to ren limits
cd /etc/pscheduler
mv limits.conf limits.conf-orig
cp /usr/share/doc/pscheduler/limit-examples/identifier-ip-cidr-list-url limits.conf
chown root:pscheduler limits.conf
pscheduler validate-limits
cp ~/fedconfig/perfsonar.xml /etc/firewalld/services/
firewall-cmd --reload

# ganglia
yum -y install ganglia-gmond-ohpc
# cluster, mute/deaf, port
cp ~/fedconfig/gmond.conf-mace-login /etc/ganglia/gmond.conf
systemctl enable gmond
systemctl start gmond

# firewall settings
# all from local subnet - replace with yours
firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="128.6.226.160/27" accept'
# ssh, slurm, perfsonar from other member sites
firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="192.69.102.192/27" port port=22 protocol=tcp accept'
firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="192.69.102.192/27" port port=6817 protocol=tcp accept'
firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="192.69.102.192/27" service name=perfsonar accept'
# ganglia from central
firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="128.6.226.160/27" port port=8649 protocol=tcp accept'
firewall-cmd --runtime-to-permanent

# user job
yum install boinc-client boinc-client-doc




# complete mace1-5 (bare metal and mace keys already done)
# commands run from mace
for i in {1..5};do scp ~/fedconfig/hosts mace$i:/etc;done
for i in {1..5};do scp ~/fedconfig/hosts.allow mace$i:/etc;done
for i in {1..5};do scp ~/fedconfig/hosts.deny mace$i:/etc;done
pdsh -w mace[1-5] ‘systemctl disable firewalld’

# ldap
pdsh -w mace[1-5] 'yum -y install sssd openldap-clients'
pdsh -w mace[1-5] ‘mkdir /etc/openldap/cacerts’
for i in {1..5};do echo mace$i;scp ~/fedconfig/cacert.pem mace$i:/etc/openldap/cacerts;ssh mace$i ‘cacertdir_rehash /etc/openldap/cacerts/’;done
pdsh -w mace[1-5] 'authconfig --updateall --enableldap --enableldapauth --ldapserver=ldap://ufp.hpc.rutgers.edu:389 --ldapbasedn=dc=ufp,dc=hpc,dc=rutgers,dc=edu --enableldaptls --enableldapstarttls'
pdsh -w mace[1-5] ‘systemctl restart sssd’
pdsh -w mace[1-5] ‘id babbott’

# slurm
# should be 20003, 20002
pdsh -w mace[1-5] ‘id slurm;id munge’
pdsh -w mace[1-5] ‘yum -y install ohpc-slurm-client ohpc-slurm-server’
for i in {1..5};do scp ~/fedconfig/munge.key-ufp mace$i:/etc/munge/munge.key;done
pdsh -w mace[1-5] ‘systemctl restart munge’
for i in {1..5};do scp ~/fedconfig/slurm.conf-mace mace$i:/etc/slurm/slurm.conf;done
pdsh -w mace[1-5] “systemctl enable slurmd;systemctl restart slurmd”

# nfs mounts - do on each compute node
ssh mace1
# comment out local /home if present, add nfs home
#mace.local:/home /home                   nfs     defaults        0 0
vi /etc/fstab
exit
# repeat for mace2-5
# back to mace
pdsh -w mace[1-5] 'umount /home;mount /home'


# xrootd
# on mace1-5
ssh mace1
#mace.local:/xrootd /xrootd        nfs    defaults    0 0
vi /etc/fstab
exit
# back to mace
pdsh -w mace[1-5] ‘mkdir /xrootd;mount /xrootd;ls /xrootd’


# ganglia
pdsh -w mace[1-5] 'yum -y install ganglia-gmond-ohpc'
for i in {1..5};do echo mace$i;scp ~/fedconfig/gmond.conf-mace-compute mace$i:/etc/ganglia/gmond.conf;done
pdsh -w mace[1-5] 'systemctl enable gmond'
pdsh -w mace[1-5] 'systemctl start gmond'


# confirm user can ssh from mace to mace1-5 without password
su - babbott
for i in {1..5};do ssh mace$i “uptime”;done
exit

# user job
pdsh -w mace[1-5] ‘yum -y install boinc-client boinc-client-doc’
